plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = mod_version
group = mod_group_id


base {
    archivesName = mod_id
}

//copyIdeResources = true

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
jarJar.enable()
tasks.named('jarJar') {
    archiveClassifier = "server"
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://cursemaven.com'
        content { includeGroup 'curse.maven' }
    }
}

shadowJar {
    // Only shadow fluent-hc
    dependencies {
        include(dependency('io.undertow:undertow-core'))
        include(dependency('org.jboss.xnio:xnio-nio'))
        include(dependency('org.jboss.xnio:xnio-api'))
        include(dependency('org.jboss.xnio:io-utils'))
        include(dependency('org.jboss.xnio:bits'))
        include(dependency('org.wildfly.common:wildfly-common'))
        include(dependency('org.jboss.logging:jboss-logging'))
        include(dependency('org.jboss.threads:jboss-threads'))
    }
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //    implementation jarJar(group: "io.undertow", name: "undertow-core", version: "[2.2.10-Final,)")
    //    externalLibs files('libs/undertow-core-2.2.10-Final.jar')
//    implementation 'io.undertow:undertow-core:2.2.10-Final'
      minecraftLibrary jarJar(group: "io.undertow", name: "undertow-core", version: "[2.3.13.Final,)")
      minecraftLibrary jarJar(group: 'org.jboss.xnio', name: 'xnio-nio', version: '[3.8.15.Final,)')
      implementation fg.deobf('curse.maven:pmmo-353935:4729828')
//    implementation group: 'io.undertow', name: 'undertow-core', version: '2.3.13.Final'


    // For more info:
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
//                'Main-Class'             : 'com.example.examplemod.ExampleMod'
        ])
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}


build.dependsOn(shadowJar)